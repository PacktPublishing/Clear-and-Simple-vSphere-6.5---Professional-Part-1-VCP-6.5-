WEBVTT

00:01.030 --> 00:06.030
In this video I'll demonstrate how to configure traffic shaping on a sphere distributed switch.

00:08.150 --> 00:14.990
So here I am in the networking view of the Vee's for web climb and you can see here I've clicked on

00:15.020 --> 00:21.200
a nice fair to show it a twitch called VCP demo and within this Vee's for a distributed switch there

00:21.210 --> 00:25.850
is a bunch of properties and other things that we can potentially configure.

00:26.120 --> 00:33.560
Now I'm actually going to drill down to an individual port group called V.M. network DP G.

00:35.530 --> 00:39.670
And inside of that group I'm going to configure traffic shaping.

00:39.910 --> 00:45.970
Now one of the things you'll notice about traffic shaping here with a distributed switch is I can configure

00:45.970 --> 00:50.590
both ingress and egress traffic shaping.

00:50.800 --> 00:56.920
If I look at a standard port group like VM network here for example and I look at the configuration

00:56.920 --> 01:04.870
options for that my options are going to be relatively simple and actually have to go to the ESX host

01:04.870 --> 01:07.610
here to configure this so let me do that.

01:07.940 --> 01:16.230
Here's the switch 0 here is a port group that we've created on VSE which is zero called VM network and

01:16.300 --> 01:22.130
I'm going to edit V.M. network and I just want to quickly demonstrate that with the Standard Poor's

01:22.130 --> 01:24.660
group you can configure traffic shaping.

01:24.680 --> 01:30.240
However there is no different configuration settings for inbound and outbound.

01:30.470 --> 01:36.520
That's because inbound traffic shaping is not possible on a VSE fair standard switch.

01:36.520 --> 01:46.000
So keep that in mind for the exam that inbound and outbound traffic shaping are supported by a port

01:46.000 --> 01:50.410
group out Avies for distributed switch.

01:50.410 --> 01:58.120
So let's go ahead and set up traffic shaping and the purpose of traffic shaping is essentially to put

01:58.120 --> 02:05.380
some sort of governance on the amount of traffic that can be generated by this port group.

02:05.770 --> 02:11.350
So for example I might have a whole bunch of Port groups I know in this case have only configured one.

02:11.540 --> 02:18.670
Let's say you have 20 different port groups and one of those port groups tends to produce a lot of traffic.

02:18.670 --> 02:27.640
What I can do is I can enable traffic shaping on that particular port group and I can establish some

02:27.730 --> 02:34.840
limitations like for example I can establish the average bandwidth in kilobits per second that each

02:34.840 --> 02:37.510
virtual machine is entitled to.

02:37.510 --> 02:45.430
So if I make this value 50000 like you see here that means that each virtual machine connected to this

02:45.430 --> 02:55.900
port group can produce an average of 50 megabits per second of eat grass traffic each virtual machine

02:55.930 --> 03:02.990
and this port group can produce a maximum at any given moment of bandwidth of 100 megabits per second.

03:04.630 --> 03:11.190
And the burst size defines how long are they allowed to transmit at that peak level.

03:11.200 --> 03:19.090
So for example let's say I make this 124 thousand That's 124 megabytes.

03:19.090 --> 03:26.530
That means that each virtual machine in this port group is going to be entitled to 124 megabytes of

03:26.530 --> 03:27.640
burst size.

03:27.640 --> 03:36.670
That means they can transmit 124 megabytes of data at this peak bandwidth rate of 100 megabits per second

03:37.270 --> 03:44.050
when they exhaust this burst size the virtual machine will be forced back down to 50 make of its per

03:44.050 --> 03:52.600
second and the only way that the VM can build this burst size back up is to stay below this average

03:52.600 --> 03:59.050
bandwidth and if the virtual machine is transmitting less than 50 megabits per second that's going to

03:59.050 --> 04:04.200
allow it to start saving up again and building up that burst size for when it needs it.

04:04.210 --> 04:10.060
So traffic shaping is great if you have varying traffic requirements.

04:10.120 --> 04:15.970
Sometimes the VM needs to transmit a lot of data sometimes it's only a little traffic shaping supports

04:15.970 --> 04:16.860
that model.

04:17.110 --> 04:24.640
So really the primary purpose here is just to ensure that one particular distributed group doesn't consume

04:24.730 --> 04:28.930
all of the bandwidth available on those physical adapters.

04:28.930 --> 04:31.140
That's what traffic shaping is all about.

04:31.140 --> 04:33.490
I must look at it like a safety net.

04:33.700 --> 04:37.960
You know it's a way to apply some sort of limitation.

04:38.230 --> 04:43.030
Let's say for example one of these programs is for development and they're testing and outbound FGP

04:43.030 --> 04:45.750
server that generates a ton of traffic.

04:46.130 --> 04:53.530
Well if that traffic is sharing physical adapter's with eyes scuzzy or with your management VM kernel

04:53.530 --> 05:01.570
port or with other critical types of traffic that can have a huge impact configuring traffic shaping

05:01.840 --> 05:04.120
would give you some protection against that.
